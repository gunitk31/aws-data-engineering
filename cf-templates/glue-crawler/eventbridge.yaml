AWSTemplateFormatVersion: '2010-09-09'

Parameters:
  ParamCrawlerS3BucketName:
    Type: String
    Description: "Name of the S3 bucket"

  ParamCrawlerTriggerLambdaArn:
    Type: String
    Description: "ARN of the Lambda function that triggers the Glue Crawler"

Resources:

  svcCrawlerEventBridgeRole:
    Type: "AWS::IAM::Role"
    Properties:
      RoleName: !Sub svcCrawlerEventBridgeRole-${AWS::Region}
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service: "events.amazonaws.com"
            Action: "sts:AssumeRole"
      Policies:
        - PolicyName: "InvokeLambdaFromEventBridge"
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action:
                  - "lambda:InvokeFunction"
                Resource: !Ref ParamCrawlerTriggerLambdaArn

  CrawlerEventRule:
    Type: "AWS::Events::Rule"
    Properties:
      Name: !Sub "${ParamCrawlerS3BucketName}-s3-event-rule"
      EventPattern:
        source:
          - "aws.s3"
        detail-type:
          - "AWS API Call via CloudTrail"
        detail:
          eventSource:
            - "s3.amazonaws.com"
          eventName:
            - "PutObject"
            - "PostObject"
            - "CopyObject"
          requestParameters:
            bucketName:
              - !Ref ParamCrawlerS3BucketName
      Targets:
        - Arn: !Ref ParamCrawlerTriggerLambdaArn
          Id: "LambdaCrawlerTarget"
          RoleArn: !GetAtt svcCrawlerEventBridgeRole.Arn

  LambdaInvokePermission:
    Type: "AWS::Lambda::Permission"
    Properties:
      Action: "lambda:InvokeFunction"
      FunctionName: !Ref ParamCrawlerTriggerLambdaArn
      Principal: "events.amazonaws.com"
      SourceArn: !Sub "arn:${AWS::Partition}:events:${AWS::Region}:${AWS::AccountId}:rule/${ParamCrawlerS3BucketName}-s3-event-rule"